(()=>{var e={720:()=>{},194:()=>{},236:()=>{},676:()=>{},611:()=>{},449:()=>{}},t={};function n(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{"use strict";const e=[0,2e3,1e4,3e4,null];class t{constructor(t){this._retryDelays=void 0!==t?[...t,null]:e}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class o{}o.Authorization="Authorization",o.Cookie="Cookie";class s{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class i{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}class r extends i{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}async send(e){let t=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(t=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(e);const n=await this._innerClient.send(e);return t&&401===n.statusCode&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(e),await this._innerClient.send(e)):n}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[o.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[o.Authorization]&&delete e.headers[o.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}class a extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class c extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class l extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class h extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class d extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class u extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class g extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class m extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}var p;!function(e){e[e.Trace=0]="Trace",e[e.Debug=1]="Debug",e[e.Information=2]="Information",e[e.Warning=3]="Warning",e[e.Error=4]="Error",e[e.Critical=5]="Critical",e[e.None=6]="None"}(p||(p={}));class _{constructor(){}log(e,t){}}_.instance=new _;const v="8.0.0";class f{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class y{static get isBrowser(){return!y.isNode&&"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return!y.isNode&&"object"==typeof self&&"importScripts"in self}static get isReactNative(){return!y.isNode&&"object"==typeof window&&void 0===window.document}static get isNode(){return"undefined"!=typeof process&&process.release&&"node"===process.release.name}}function w(e,t){let n="";return b(e)?(n=`Binary data of length ${e.byteLength}`,t&&(n+=`. Content: '${function(e){const t=new Uint8Array(e);let n="";return t.forEach((e=>{n+=`0x${e<16?"0":""}${e.toString(16)} `})),n.substr(0,n.length-1)}(e)}'`)):"string"==typeof e&&(n=`String data of length ${e.length}`,t&&(n+=`. Content: '${e}'`)),n}function b(e){return e&&"undefined"!=typeof ArrayBuffer&&(e instanceof ArrayBuffer||e.constructor&&"ArrayBuffer"===e.constructor.name)}async function E(e,t,n,o,s,i){const r={},[a,c]=I();r[a]=c,e.log(p.Trace,`(${t} transport) sending data. ${w(s,i.logMessageContent)}.`);const l=b(s)?"arraybuffer":"text",h=await n.post(o,{content:s,headers:{...r,...i.headers},responseType:l,timeout:i.timeout,withCredentials:i.withCredentials});e.log(p.Trace,`(${t} transport) request complete. Response status: ${h.statusCode}.`)}class C{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch((e=>{}))}}class S{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${p[e]}: ${t}`;switch(e){case p.Critical:case p.Error:this.out.error(n);break;case p.Warning:this.out.warn(n);break;case p.Information:this.out.info(n);break;default:this.out.log(n)}}}}function I(){let e="X-SignalR-User-Agent";return y.isNode&&(e="User-Agent"),[e,P(v,k(),y.isNode?"NodeJS":"Browser",T())]}function P(e,t,n,o){let s="Microsoft SignalR/";const i=e.split(".");return s+=`${i[0]}.${i[1]}`,s+=` (${e}; `,s+=t&&""!==t?`${t}; `:"Unknown OS; ",s+=`${n}`,s+=o?`; ${o}`:"; Unknown Runtime Version",s+=")",s}function k(){if(!y.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function T(){if(y.isNode)return process.versions.node}function R(e){return e.stack?e.stack:e.message?e.message:`${e}`}class B extends i{constructor(e){super(),this._logger=e;const t={_fetchType:void 0,_jar:void 0};var o;o=t,("undefined"==typeof fetch||y.isNode)&&(o._jar=new(n(611).CookieJar),"undefined"==typeof fetch?o._fetchType=n(676):o._fetchType=fetch,o._fetchType=n(236)(o._fetchType,o._jar),1)?(this._fetchType=t._fetchType,this._jar=t._jar):this._fetchType=fetch.bind(function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==n.g)return n.g;throw new Error("could not find global")}()),this._abortControllerType=AbortController;const s={_abortControllerType:this._abortControllerType};(function(e){return"undefined"==typeof AbortController&&(e._abortControllerType=n(720),!0)})(s)&&(this._abortControllerType=s._abortControllerType)}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new l;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new l});let o,i=null;if(e.timeout){const o=e.timeout;i=setTimeout((()=>{t.abort(),this._logger.log(p.Warning,"Timeout from HTTP request."),n=new c}),o)}""===e.content&&(e.content=void 0),e.content&&(e.headers=e.headers||{},b(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");try{o=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(e){if(n)throw n;throw this._logger.log(p.Warning,`Error from HTTP request. ${e}.`),e}finally{i&&clearTimeout(i),e.abortSignal&&(e.abortSignal.onabort=null)}if(!o.ok){const e=await x(o,"text");throw new a(e||o.statusText,o.status)}const r=x(o,e.responseType),h=await r;return new s(o.status,o.statusText,h)}getCookieString(e){let t="";return y.isNode&&this._jar&&this._jar.getCookies(e,((e,n)=>t=n.join("; "))),t}}function x(e,t){let n;switch(t){case"arraybuffer":n=e.arrayBuffer();break;case"text":default:n=e.text();break;case"blob":case"document":case"json":throw new Error(`${t} is not supported.`)}return n}class M extends i{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new l):e.method?e.url?new Promise(((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=void 0===e.withCredentials||e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===e.content&&(e.content=void 0),e.content&&(b(e.content)?o.setRequestHeader("Content-Type","application/octet-stream"):o.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const i=e.headers;i&&Object.keys(i).forEach((e=>{o.setRequestHeader(e,i[e])})),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new l)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new s(o.status,o.statusText,o.response||o.responseText)):n(new a(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(p.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new a(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(p.Warning,"Timeout from HTTP request."),n(new c)},o.send(e.content)})):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class D extends i{constructor(e){if(super(),"undefined"!=typeof fetch||y.isNode)this._httpClient=new B(e);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this._httpClient=new M(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new l):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}var N,L,H,W;!function(e){e[e.None=0]="None",e[e.WebSockets=1]="WebSockets",e[e.ServerSentEvents=2]="ServerSentEvents",e[e.LongPolling=4]="LongPolling"}(N||(N={})),function(e){e[e.Text=1]="Text",e[e.Binary=2]="Binary"}(L||(L={}));class q{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class A{get pollAborted(){return this._pollAbort.aborted}constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new q,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}async connect(e,t){if(f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,L,"transferFormat"),this._url=e,this._logger.log(p.Trace,"(LongPolling transport) Connecting."),t===L.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,o]=I(),s={[n]:o,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};t===L.Binary&&(i.responseType="arraybuffer");const r=`${e}&_=${Date.now()}`;this._logger.log(p.Trace,`(LongPolling transport) polling: ${r}.`);const c=await this._httpClient.get(r,i);200!==c.statusCode?(this._logger.log(p.Error,`(LongPolling transport) Unexpected response code: ${c.statusCode}.`),this._closeError=new a(c.statusText||"",c.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _poll(e,t){try{for(;this._running;)try{const n=`${e}&_=${Date.now()}`;this._logger.log(p.Trace,`(LongPolling transport) polling: ${n}.`);const o=await this._httpClient.get(n,t);204===o.statusCode?(this._logger.log(p.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==o.statusCode?(this._logger.log(p.Error,`(LongPolling transport) Unexpected response code: ${o.statusCode}.`),this._closeError=new a(o.statusText||"",o.statusCode),this._running=!1):o.content?(this._logger.log(p.Trace,`(LongPolling transport) data received. ${w(o.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(o.content)):this._logger.log(p.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this._running?e instanceof c?this._logger.log(p.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=e,this._running=!1):this._logger.log(p.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}finally{this._logger.log(p.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?E(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(p.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(p.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=I();e[t]=n;const o={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};let s;try{await this._httpClient.delete(this._url,o)}catch(e){s=e}s?s instanceof a&&(404===s.statusCode?this._logger.log(p.Trace,"(LongPolling transport) A 404 response was returned from sending a DELETE request."):this._logger.log(p.Trace,`(LongPolling transport) Error sending a DELETE request: ${s}`)):this._logger.log(p.Trace,"(LongPolling transport) DELETE request accepted.")}finally{this._logger.log(p.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(p.Trace,e),this.onclose(this._closeError)}}}class j{constructor(e,t,n,o){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}async connect(e,t){return f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,L,"transferFormat"),this._logger.log(p.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise(((n,o)=>{let s,i=!1;if(t===L.Text){if(y.isBrowser||y.isWebWorker)s=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const t=this._httpClient.getCookieString(e),n={};n.Cookie=t;const[o,i]=I();n[o]=i,s=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...n,...this._options.headers}})}try{s.onmessage=e=>{if(this.onreceive)try{this._logger.log(p.Trace,`(SSE transport) data received. ${w(e.data,this._options.logMessageContent)}.`),this.onreceive(e.data)}catch(e){return void this._close(e)}},s.onerror=e=>{i?this._close():o(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},s.onopen=()=>{this._logger.log(p.Information,`SSE connected to ${this._url}`),this._eventSource=s,i=!0,n()}}catch(e){return void o(e)}}else o(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))}))}async send(e){return this._eventSource?E(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class V{constructor(e,t,n,o,s,i){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=i}async connect(e,t){let n;return f.isRequired(e,"url"),f.isRequired(t,"transferFormat"),f.isIn(t,L,"transferFormat"),this._logger.log(p.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory&&(n=await this._accessTokenFactory()),new Promise(((s,i)=>{let r;e=e.replace(/^http/,"ws");const a=this._httpClient.getCookieString(e);let c=!1;if(y.isNode||y.isReactNative){const t={},[s,i]=I();t[s]=i,n&&(t[o.Authorization]=`Bearer ${n}`),a&&(t[o.Cookie]=a),r=new this._webSocketConstructor(e,void 0,{headers:{...t,...this._headers}})}else n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`);r||(r=new this._webSocketConstructor(e)),t===L.Binary&&(r.binaryType="arraybuffer"),r.onopen=t=>{this._logger.log(p.Information,`WebSocket connected to ${e}.`),this._webSocket=r,c=!0,s()},r.onerror=e=>{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"There was an error with the transport",this._logger.log(p.Information,`(WebSockets transport) ${t}.`)},r.onmessage=e=>{if(this._logger.log(p.Trace,`(WebSockets transport) data received. ${w(e.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(e.data)}catch(e){return void this._close(e)}},r.onclose=e=>{if(c)this._close(e);else{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",i(new Error(t))}}}))}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(p.Trace,`(WebSockets transport) sending data. ${w(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(p.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class U{constructor(e,t={}){var o;if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,f.isRequired(e,"url"),this._logger=void 0===(o=t.logger)?new S(p.Information):null===o?_.instance:void 0!==o.log?o:new S(o),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let s=null,i=null;y.isNode&&(s=n(449),i=n(194)),y.isNode||"undefined"==typeof WebSocket||t.WebSocket?y.isNode&&!t.WebSocket&&s&&(t.WebSocket=s):t.WebSocket=WebSocket,y.isNode||"undefined"==typeof EventSource||t.EventSource?y.isNode&&!t.EventSource&&void 0!==i&&(t.EventSource=i):t.EventSource=EventSource,this._httpClient=new r(t.httpClient||new D(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||L.Binary,f.isIn(e,L,"transferFormat"),this._logger.log(p.Debug,`Starting connection with transfer format '${L[e]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,"Disconnecting"===this._connectionState){const e="Failed to start the HttpConnection before stop() was called.";return this._logger.log(p.Error,e),await this._stopPromise,Promise.reject(new l(e))}if("Connected"!==this._connectionState){const e="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(p.Error,e),Promise.reject(new l(e))}this._connectionStarted=!0}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new O(this.transport)),this._sendQueue.send(e))}async stop(e){return"Disconnected"===this._connectionState?(this._logger.log(p.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(p.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState="Disconnecting",this._stopPromise=new Promise((e=>{this._stopPromiseResolver=e})),await this._stopInternal(e),void await this._stopPromise)}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch(e){}if(this.transport){try{await this.transport.stop()}catch(e){this._logger.log(p.Error,`HttpConnection.transport.stop() threw error '${e}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(p.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport!==N.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this._constructTransport(N.WebSockets),await this._startTransport(t,e)}else{let n=null,o=0;do{if(n=await this._getNegotiationResponse(t),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw new l("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const e=n.accessToken;this._accessTokenFactory=()=>e,this._httpClient._accessToken=e,this._httpClient._accessTokenFactory=void 0}o++}while(n.url&&o<100);if(100===o&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof A&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(p.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(e){return this._logger.log(p.Error,"Failed to start the connection: "+e),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(e)}}async _getNegotiationResponse(e){const t={},[n,o]=I();t[n]=o;const s=this._resolveNegotiateUrl(e);this._logger.log(p.Debug,`Sending negotiation request: ${s}.`);try{const e=await this._httpClient.post(s,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==e.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${e.statusCode}'`));const n=JSON.parse(e.content);return(!n.negotiateVersion||n.negotiateVersion<1)&&(n.connectionToken=n.connectionId),n.useStatefulReconnect&&!0!==this._options._useStatefulReconnect?Promise.reject(new g("Client didn't negotiate Stateful Reconnect but the server did.")):n}catch(e){let t="Failed to complete negotiation with the server: "+e;return e instanceof a&&404===e.statusCode&&(t+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(p.Error,t),Promise.reject(new g(t))}}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,o){let s=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t))return this._logger.log(p.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(s,o),void(this.connectionId=n.connectionId);const i=[],r=n.availableTransports||[];let a=n;for(const n of r){const r=this._resolveTransportOrError(n,t,o,!0===(null==a?void 0:a.useStatefulReconnect));if(r instanceof Error)i.push(`${n.transport} failed:`),i.push(r);else if(this._isITransport(r)){if(this.transport=r,!a){try{a=await this._getNegotiationResponse(e)}catch(e){return Promise.reject(e)}s=this._createConnectUrl(e,a.connectionToken)}try{return await this._startTransport(s,o),void(this.connectionId=a.connectionId)}catch(e){if(this._logger.log(p.Error,`Failed to start the transport '${n.transport}': ${e}`),a=void 0,i.push(new u(`${n.transport} failed: ${e}`,N[n.transport])),"Connecting"!==this._connectionState){const e="Failed to select transport before stop() was called.";return this._logger.log(p.Debug,e),Promise.reject(new l(e))}}}}return i.length>0?Promise.reject(new m(`Unable to connect to the server with any of the available transports. ${i.join(" ")}`,i)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case N.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new V(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case N.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new j(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case N.LongPolling:return new A(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=async n=>{let o=!1;if(this.features.reconnect){try{this.features.disconnected(),await this.transport.connect(e,t),await this.features.resend()}catch{o=!0}o&&this._stopConnection(n)}else this._stopConnection(n)}:this.transport.onclose=e=>this._stopConnection(e),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n,o){const s=N[e.transport];if(null==s)return this._logger.log(p.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function(e,t){return!e||!!(t&e)}(t,s))return this._logger.log(p.Debug,`Skipping transport '${N[s]}' because it was disabled by the client.`),new d(`'${N[s]}' is disabled by the client.`,s);if(!(e.transferFormats.map((e=>L[e])).indexOf(n)>=0))return this._logger.log(p.Debug,`Skipping transport '${N[s]}' because it does not support the requested transfer format '${L[n]}'.`),new Error(`'${N[s]}' does not support ${L[n]}.`);if(s===N.WebSockets&&!this._options.WebSocket||s===N.ServerSentEvents&&!this._options.EventSource)return this._logger.log(p.Debug,`Skipping transport '${N[s]}' because it is not supported in your environment.'`),new h(`'${N[s]}' is not supported in your environment.`,s);this._logger.log(p.Debug,`Selecting transport '${N[s]}'.`);try{return this.features.reconnect=s===N.WebSockets?o:void 0,this._constructTransport(s)}catch(e){return e}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(p.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(p.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(p.Error,`Connection disconnected with error '${e}'.`):this._logger.log(p.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch((e=>{this._logger.log(p.Error,`TransportSendQueue.stop() threw error '${e}'.`)})),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(p.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(p.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!y.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(p.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=new URL(e);t.pathname.endsWith("/")?t.pathname+="negotiate":t.pathname+="/negotiate";const n=new URLSearchParams(t.searchParams);return n.has("negotiateVersion")||n.append("negotiateVersion",this._negotiateVersion.toString()),n.has("useStatefulReconnect")?"true"===n.get("useStatefulReconnect")&&(this._options._useStatefulReconnect=!0):!0===this._options._useStatefulReconnect&&n.append("useStatefulReconnect","true"),t.search=n.toString(),t.toString()}}class O{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new F,this._transportResult=new F,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new F),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new F;const e=this._transportResult;this._transportResult=void 0;const t="string"==typeof this._buffer[0]?this._buffer.join(""):O._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(t){e.reject(t)}}}static _concatBuffers(e){const t=e.map((e=>e.byteLength)).reduce(((e,t)=>e+t)),n=new Uint8Array(t);let o=0;for(const t of e)n.set(new Uint8Array(t),o),o+=t.byteLength;return n.buffer}}class F{constructor(){this.promise=new Promise(((e,t)=>[this._resolver,this._rejecter]=[e,t]))}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class G{static write(e){return`${e}${G.RecordSeparator}`}static parse(e){if(e[e.length-1]!==G.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(G.RecordSeparator);return t.pop(),t}}G.RecordSeparatorCode=30,G.RecordSeparator=String.fromCharCode(G.RecordSeparatorCode);class K{writeHandshakeRequest(e){return G.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(b(e)){const o=new Uint8Array(e),s=o.indexOf(G.RecordSeparatorCode);if(-1===s)throw new Error("Message is incomplete.");const i=s+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(o.slice(0,i))),n=o.byteLength>i?o.slice(i).buffer:null}else{const o=e,s=o.indexOf(G.RecordSeparator);if(-1===s)throw new Error("Message is incomplete.");const i=s+1;t=o.substring(0,i),n=o.length>i?o.substring(i):null}const o=G.parse(t),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}!function(e){e[e.Invocation=1]="Invocation",e[e.StreamItem=2]="StreamItem",e[e.Completion=3]="Completion",e[e.StreamInvocation=4]="StreamInvocation",e[e.CancelInvocation=5]="CancelInvocation",e[e.Ping=6]="Ping",e[e.Close=7]="Close",e[e.Ack=8]="Ack",e[e.Sequence=9]="Sequence"}(H||(H={}));class z{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new C(this,e)}}class X{constructor(e,t,n){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=t,this._bufferSize=n}async _send(e){const t=this._protocol.writeMessage(e);let n=Promise.resolve();if(this._isInvocationMessage(e)){this._totalMessageCount++;let e=()=>{},o=()=>{};b(t)?this._bufferedByteCount+=t.byteLength:this._bufferedByteCount+=t.length,this._bufferedByteCount>=this._bufferSize&&(n=new Promise(((t,n)=>{e=t,o=n}))),this._messages.push(new J(t,this._totalMessageCount,e,o))}try{this._reconnectInProgress||await this._connection.send(t)}catch{this._disconnected()}await n}_ack(e){let t=-1;for(let n=0;n<this._messages.length;n++){const o=this._messages[n];if(o._id<=e.sequenceId)t=n,b(o._message)?this._bufferedByteCount-=o._message.byteLength:this._bufferedByteCount-=o._message.length,o._resolver();else{if(!(this._bufferedByteCount<this._bufferSize))break;o._resolver()}}-1!==t&&(this._messages=this._messages.slice(t+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type===H.Sequence&&(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;const t=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,t<=this._latestReceivedSequenceId?(t===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=t,this._ackTimer(),!0)}_resetSequence(e){e.sequenceId>this._nextReceivingSequenceId?this._connection.stop(new Error("Sequence ID greater than amount of messages we've received.")):this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}async _resend(){const e=0!==this._messages.length?this._messages[0]._id:this._totalMessageCount+1;await this._connection.send(this._protocol.writeMessage({type:H.Sequence,sequenceId:e}));const t=this._messages;for(const e of t)await this._connection.send(e._message);this._reconnectInProgress=!1}_dispose(e){null!=e||(e=new Error("Unable to reconnect to server."));for(const t of this._messages)t._rejector(e)}_isInvocationMessage(e){switch(e.type){case H.Invocation:case H.StreamItem:case H.Completion:case H.StreamInvocation:case H.CancelInvocation:return!0;case H.Close:case H.Sequence:case H.Ping:case H.Ack:return!1}}_ackTimer(){void 0===this._ackTimerHandle&&(this._ackTimerHandle=setTimeout((async()=>{try{this._reconnectInProgress||await this._connection.send(this._protocol.writeMessage({type:H.Ack,sequenceId:this._latestReceivedSequenceId}))}catch{}clearTimeout(this._ackTimerHandle),this._ackTimerHandle=void 0}),1e3))}}class J{constructor(e,t,n,o){this._message=e,this._id=t,this._resolver=n,this._rejector=o}}!function(e){e.Disconnected="Disconnected",e.Connecting="Connecting",e.Connected="Connected",e.Disconnecting="Disconnecting",e.Reconnecting="Reconnecting"}(W||(W={}));class Q{static create(e,t,n,o,s,i,r){return new Q(e,t,n,o,s,i,r)}constructor(e,t,n,o,s,i,r){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(p.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},f.isRequired(e,"connection"),f.isRequired(t,"logger"),f.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=null!=s?s:3e4,this.keepAliveIntervalInMilliseconds=null!=i?i:15e3,this._statefulReconnectBufferSize=null!=r?r:1e5,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new K,this.connection.onreceive=e=>this._processIncomingData(e),this.connection.onclose=e=>this._connectionClosed(e),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=W.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:H.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==W.Disconnected&&this._connectionState!==W.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==W.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=W.Connecting,this._logger.log(p.Debug,"Starting HubConnection.");try{await this._startInternal(),y.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=W.Connected,this._connectionStarted=!0,this._logger.log(p.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=W.Disconnected,this._logger.log(p.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise(((e,t)=>{this._handshakeResolver=e,this._handshakeRejecter=t}));await this.connection.start(this._protocol.transferFormat);try{let t=this._protocol.version;this.connection.features.reconnect||(t=1);const n={protocol:this._protocol.name,version:t};if(this._logger.log(p.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(n)),this._logger.log(p.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError;!!this.connection.features.reconnect&&(this._messageBuffer=new X(this._protocol,this.connection,this._statefulReconnectBufferSize),this.connection.features.disconnected=this._messageBuffer._disconnected.bind(this._messageBuffer),this.connection.features.resend=()=>{if(this._messageBuffer)return this._messageBuffer._resend()}),this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(e){throw this._logger.log(p.Debug,`Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(e),e}}async stop(){const e=this._startPromise;this.connection.features.reconnect=!1,this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch(e){}}_stopInternal(e){if(this._connectionState===W.Disconnected)return this._logger.log(p.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===W.Disconnecting)return this._logger.log(p.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;const t=this._connectionState;return this._connectionState=W.Disconnecting,this._logger.log(p.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(p.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(t===W.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new l("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}async _sendCloseMessage(){try{await this._sendWithProtocol(this._createCloseMessage())}catch{}}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,o);let i;const r=new z;return r.cancelCallback=()=>{const e=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],i.then((()=>this._sendWithProtocol(e)))},this._callbacks[s.invocationId]=(e,t)=>{t?r.error(t):e&&(e.type===H.Completion?e.error?r.error(new Error(e.error)):r.complete():r.next(e.item))},i=this._sendWithProtocol(s).catch((e=>{r.error(e),delete this._callbacks[s.invocationId]})),this._launchStreams(n,i),r}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,s),s}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,o);return new Promise(((e,t)=>{this._callbacks[s.invocationId]=(n,o)=>{o?t(o):n&&(n.type===H.Completion?n.error?t(new Error(n.error)):e(n.result):t(new Error(`Unexpected message type: ${n.type}`)))};const o=this._sendWithProtocol(s).catch((e=>{t(e),delete this._callbacks[s.invocationId]}));this._launchStreams(n,o)}))}on(e,t){e&&t&&(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);-1!==o&&(n.splice(o,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const e of t)if(!this._messageBuffer||this._messageBuffer._shouldProcessMessage(e))switch(e.type){case H.Invocation:this._invokeClientMethod(e);break;case H.StreamItem:case H.Completion:{const t=this._callbacks[e.invocationId];if(t){e.type===H.Completion&&delete this._callbacks[e.invocationId];try{t(e)}catch(e){this._logger.log(p.Error,`Stream callback threw error: ${R(e)}`)}}break}case H.Ping:break;case H.Close:{this._logger.log(p.Information,"Close message received from server.");const t=e.error?new Error("Server returned an error on close: "+e.error):void 0;!0===e.allowReconnect?this.connection.stop(t):this._stopPromise=this._stopInternal(t);break}case H.Ack:this._messageBuffer&&this._messageBuffer._ack(e);break;case H.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(e);break;default:this._logger.log(p.Warning,`Invalid message type: ${e.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(e){const t="Error parsing handshake response: "+e;this._logger.log(p.Error,t);const n=new Error(t);throw this._handshakeRejecter(n),n}if(t.error){const e="Server returned handshake error: "+t.error;this._logger.log(p.Error,e);const n=new Error(e);throw this._handshakeRejecter(n),n}return this._logger.log(p.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let e=this._nextKeepAlive-(new Date).getTime();e<0&&(e=0),this._pingServerHandle=setTimeout((async()=>{if(this._connectionState===W.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}}),e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(e){const t=e.target.toLowerCase(),n=this._methods[t];if(!n)return this._logger.log(p.Warning,`No client method with the name '${t}' found.`),void(e.invocationId&&(this._logger.log(p.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null))));const o=n.slice(),s=!!e.invocationId;let i,r,a;for(const n of o)try{const o=i;i=await n.apply(this,e.arguments),s&&i&&o&&(this._logger.log(p.Error,`Multiple results provided for '${t}'. Sending error to server.`),a=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),r=void 0}catch(e){r=e,this._logger.log(p.Error,`A callback for the method '${t}' threw error '${e}'.`)}a?await this._sendWithProtocol(a):s?(r?a=this._createCompletionMessage(e.invocationId,`${r}`,null):void 0!==i?a=this._createCompletionMessage(e.invocationId,null,i):(this._logger.log(p.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),a=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(a)):i&&this._logger.log(p.Error,`Result given for '${t}' method but server is not expecting a result.`)}_connectionClosed(e){this._logger.log(p.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new l("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===W.Disconnecting?this._completeClose(e):this._connectionState===W.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===W.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=W.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(null!=e?e:new Error("Connection closed.")),this._messageBuffer=void 0),y.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(p.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,o=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),s=this._getNextRetryDelay(n++,0,o);if(null===s)return this._logger.log(p.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this._completeClose(e);if(this._connectionState=W.Reconnecting,e?this._logger.log(p.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(p.Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(p.Error,`An onreconnecting callback called with error '${e}' threw error '${t}'.`)}if(this._connectionState!==W.Reconnecting)return void this._logger.log(p.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==s;){if(this._logger.log(p.Information,`Reconnect attempt number ${n} will start in ${s} ms.`),await new Promise((e=>{this._reconnectDelayHandle=setTimeout(e,s)})),this._reconnectDelayHandle=void 0,this._connectionState!==W.Reconnecting)return void this._logger.log(p.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this._startInternal(),this._connectionState=W.Connected,this._logger.log(p.Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach((e=>e.apply(this,[this.connection.connectionId])))}catch(e){this._logger.log(p.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`)}return}catch(e){if(this._logger.log(p.Information,`Reconnect attempt failed because of error '${e}'.`),this._connectionState!==W.Reconnecting)return this._logger.log(p.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this._connectionState===W.Disconnecting&&this._completeClose());o=e instanceof Error?e:new Error(e.toString()),s=this._getNextRetryDelay(n++,Date.now()-t,o)}}this._logger.log(p.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(n){return this._logger.log(p.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${n}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach((n=>{const o=t[n];try{o(null,e)}catch(t){this._logger.log(p.Error,`Stream 'error' callback called with '${e}' threw error: ${R(t)}`)}}))}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return 0!==o.length?{arguments:t,streamIds:o,target:e,type:H.Invocation}:{arguments:t,target:e,type:H.Invocation};{const n=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:n.toString(),streamIds:o,target:e,type:H.Invocation}:{arguments:t,invocationId:n.toString(),target:e,type:H.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n))))},error:e=>{let o;o=e instanceof Error?e.message:e&&e.toString?e.toString():"Unknown error",t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n,o))))},next:e=>{t=t.then((()=>this._sendWithProtocol(this._createStreamItemMessage(n,e))))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const s=e[o];if(this._isObservable(s)){const i=this._invocationId;this._invocationId++,t[i]=s,n.push(i.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:H.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:H.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:H.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:H.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:H.Completion}:{invocationId:e,result:n,type:H.Completion}}_createCloseMessage(){return{type:H.Close}}}class Y{constructor(){this.name="json",this.version=2,this.transferFormat=L.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=_.instance);const n=G.parse(e),o=[];for(const e of n){const n=JSON.parse(e);if("number"!=typeof n.type)throw new Error("Invalid payload.");switch(n.type){case H.Invocation:this._isInvocationMessage(n);break;case H.StreamItem:this._isStreamItemMessage(n);break;case H.Completion:this._isCompletionMessage(n);break;case H.Ping:case H.Close:break;case H.Ack:this._isAckMessage(n);break;case H.Sequence:this._isSequenceMessage(n);break;default:t.log(p.Information,"Unknown message type '"+n.type+"' ignored.");continue}o.push(n)}return o}writeMessage(e){return G.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Z={trace:p.Trace,debug:p.Debug,info:p.Information,information:p.Information,warn:p.Warning,warning:p.Warning,error:p.Error,critical:p.Critical,none:p.None};class ee{configureLogging(e){if(f.isRequired(e,"logging"),void 0!==e.log)this.logger=e;else if("string"==typeof e){const t=function(e){const t=Z[e.toLowerCase()];if(void 0!==t)return t;throw new Error(`Unknown log level: ${e}`)}(e);this.logger=new S(t)}else this.logger=new S(e);return this}withUrl(e,t){return f.isRequired(e,"url"),f.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return f.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new t(e):this.reconnectPolicy=e:this.reconnectPolicy=new t,this}withServerTimeout(e){return f.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return f.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return void 0===this.httpConnectionOptions&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=null==e?void 0:e.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new U(this.url,e);return Q.create(t,this.logger||_.instance,this.protocol||new Y,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}class te{constructor(){this.activate=async()=>{document.getElementsByTagName("body").item(0).style.visibility="hidden",await this.connectionStart(),document.getElementsByTagName("body").item(0).style.visibility="visible"},this.connectionStart=async()=>{await this.connection.start().catch((e=>console.log(e)))},this.send=(e,...t)=>{this.connection.send(e,...t)},this.get=(e,t)=>{this.connection.on(e,(e=>{let n={};n="string"==typeof n?JSON.parse(e):e,t(n)}))},this.close=()=>{this.connection.stop()},this.connection=(new ee).withUrl("/hub").build()}}class ne{constructor(){this.send=async(e,t,n,o,s="json",i=!0)=>{let r;r="GET"==t?new Request(e,{method:t,headers:n}):new Request(e,{method:t,headers:n,body:JSON.stringify(o)});const a=await fetch(r).catch((e=>{throw e}));if(!a.ok)throw new Error(a.statusText);if(i)switch(s){case"json":return await this.fetchResonse(a.json()).catch((e=>{throw e}));case"text":return await this.fetchResonse(a.text()).catch((e=>{throw e}))}}}async fetchResonse(e){return await e.then((e=>e)).catch((e=>{throw console.log(e),e}))}}class oe{constructor(){this.setHoraKindEvent=()=>{document.getElementById("horaKind")?.addEventListener("change",(()=>{this.sendEndHand()}))},this.sendEndHand=async()=>{const e=$("#horaKind").val()?.toString()??"";this.rewritePartial({EventNumber:this.eventNumber,HoraKind:e})},this.changeToUserEventListner=e=>{const t=document.getElementsByClassName("toUser");t[0].addEventListener("change",(()=>{this.changeToUserEvent(e,t[0])}))},this.changeToUserEvent=(e,t)=>{const n=t.value.toString()??"",o=t.selectedIndex,s=$("#parent").val()?.toString()??"",i=document.getElementById("pao").checked;return this.rewritePartial({EventNumber:this.eventNumber,HoraKind:e,Parent:s,ToUser:n,IsPao:i}).then((()=>{console.log("leach"),document.getElementsByClassName("toUser")[0].options[o].selected=!0}))},this.rewritePartial=async e=>{let t=new ne;return await t.send(this.url,this.method,this.headers,e,this.responseKind).then((e=>{$("#endGame").empty(),$("#endGame").append(e);const t=$("#horaKind").val()?.toString()??"";return"1"==t&&this.changeToUserEventListner(t),""})).catch((e=>{console.log(e)}))},this.url="/GameData/EndHandChangeDisplay",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="text",this.eventNumber=document.getElementById("eventNumber").value}}class se{constructor(){this.setSelectorEvent=e=>{this.setSelectorEventOnce(e),Array.from(e).forEach((t=>{t.addEventListener("change",(t=>{const n=t.target;this.setSelectorEventOnce(e,n)}))}))},this.setSelectorEventOnce=(e,t=null)=>{const n=Array.from(e).map((e=>e.value));t=t??e.item(0),Array.from(e).forEach((e=>{n.shift();let o=e.value;e!==t&&n.includes(e.value)&&(o=this.deduplicationOption(n,e)),n.push(o)}))},this.deduplicationOption=(e,t)=>{const n=t.children;for(let t of Array.from(n))if(!e.includes(t.value))return t.selected=!0,t.value;throw new Error("element anomaly")}}}class ie{}ie.setEvent=(e,t,n,o,s=!1)=>{const i=r=>{const a=e?.querySelector(n);r.target==a&&(o(r),s&&e?.removeEventListener(t,i))};return e?.addEventListener(t,i),i},ie.removeEvent=(e,t,n)=>{e?.removeEventListener(t,n)};class re{}re.setAvoidDuplication=()=>{const e=new se,t=document.getElementsByClassName("userList"),n=document.getElementsByClassName("directionList");e.setSelectorEvent(t),e.setSelectorEvent(n)},re.hangingVideoSetter=e=>{const t=document.getElementsByClassName("userList");Array.from(t).forEach(((t,n)=>{const o=t.closest(e);ie.setEvent(o,"change","#userCd"+n,(e=>{const t=e.target.closest(".videoController").querySelector(".directionList");"99"==e.target.value?(t.value="99",t.disabled=!0,t.dispatchEvent(new Event("change"))):t.disabled=!1}))}))};class ae{constructor(){this.endGameProperty={EventNumber:null,GameNumber:null},this.setGameEndEvent=()=>{ie.setEvent(document.getElementById("listModalWindow"),"click","#endGamebutton",(()=>{this.setGameEnd().then((()=>{window.location.reload()}))}))},this.setGameEnd=async()=>{const e=new ne;return await e.send(this.url,this.method,this.headers,this.endGameProperty,this.responseKind).then((async e=>{e&&window.location.reload()})).catch((e=>{throw e}))},this.url="/Event/EndGame",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json",this.endGameProperty.EventNumber=document.getElementById("eventNumber").value,this.endGameProperty.GameNumber=document.getElementById("gameNumber").value}}class ce{constructor(){this.showPointProperty={EventNumber:null,GameNumber:null},this.setStartEvent=()=>{ie.setEvent(document.getElementById("listModalWindow"),"click","#showPointButton",(()=>{this.show().then((e=>{document.getElementById("showPointModalWindow").innerHTML=e,document.getElementById("showPointModalWrapper").classList.remove("hidden")}))}))},this.show=async()=>{const e=new ne;return await e.send(this.url,this.method,this.headers,this.showPointProperty,this.responseKind).then((async e=>e)).catch((e=>{throw e}))},this.url="/GameData/ShowPoint",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="text",this.showPointProperty.EventNumber=document.getElementById("eventNumber").value,this.showPointProperty.GameNumber=document.getElementById("gameNumber").value}}class le{constructor(e){this.isStopRecording=!1,this.recordingInterval=0,this.recordBlobs=[],this.startRecording=(e,t,n,o,s,...i)=>{this.recordBlobs=i.map((i=>new he(e,t,n,o,s,i.MediaNumber,i.MediaStream,i.IsVideo))),this.recordBlobs.forEach((e=>{e.recorder(this.encodeBlob)})),this.recordingInterval=window.setInterval((()=>{this.recordBlobs.forEach((e=>{e.mediaRecorder?.stop(),e.mediaRecorder?.start(),this.encodeBlob(e)}))}),1e3*Number(s))},this.stopRecording=()=>(clearInterval(this.recordingInterval),this.recordBlobs.forEach((e=>{e.isStopRecording=!0,e.mediaRecorder?.stop()})),this.recordBlobs.length),this.encodeBlob=e=>{let t=e.recordedMediaProperty;if(e.blob?.length){const n=new Blob(e.blob,{type:e.blob[0].type});e.blob=[];const o=new FileReader;o.readAsDataURL(n),o.onload=()=>{const n=o.result;if(!n)throw new Error;const s=n.slice(n.indexOf(",")+1);t.MediaCount=e.mediaCount.toString(),t.Base64=s,e.mediaCount++,this.sendBlob(t).then((()=>{console.log("arrival")})).catch((e=>{throw console.log(e),e}))}}},this.sendBlob=async e=>{const t=new ne;return await t.send(this.url,this.method,this.headers,e,this.responseKind).then((async e=>{})).catch((e=>{throw e}))},this.url=e,this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json"}}class he{constructor(e,t,n,o,s,i,r,a){this.isStopRecording=!1,this.mediaCount=0,this.isVideo=!1,this.blob=[],this.recorder=e=>{const t=this.isVideo?"video":"audio",n=MediaRecorder.isTypeSupported(`${t}/webm; codecs=vp9`)?`${t}/webm; codecs=vp9`:`${t}/webm`;this.mediaRecorder=new MediaRecorder(this.mediaStream,{mimeType:n}),this.blob=[],this.mediaRecorder.ondataavailable=t=>{this.blob.push(t.data),this.isStopRecording&&(this.recordedMediaProperty.IsChangeFile=!0,e(this))},this.mediaRecorder.start()},this.recordedMediaProperty={EventNumber:e,GameNumber:t,HandNumber:n,HandSubNumber:o,MediaNumber:i,MediaCount:"",MediaMinutes:s.toString(),Base64:"",IsVideo:a,IsEndFile:!1},this.isVideo=a,this.mediaStream=r}}class de{constructor(){this.setRecordEvent=e=>{ie.setEvent(document.getElementById("listModalWindow"),"click","#startRecordingButton",(async t=>{this.activateVideo(e,t)}),!0)},this.activateVideo=async(e,t)=>{const n=document.getElementsByClassName("canvasVideo"),o=new le("/GameData/RecordedVideo"),s=Array.from(n).map((e=>{if("0"!=e.dataset.cvenable)return{MediaStream:e.captureStream(),MediaNumber:e.closest(".videoWrapper").dataset.videonumber,IsVideo:!0}})).filter(Boolean);o.startRecording(document.getElementById("eventNumber").value,document.getElementById("gameNumber").value,document.getElementById("handNumber").value,document.getElementById("handSubNumber").value,10..toString(),...s),t.target.textContent="録画停止",ie.setEvent(document.getElementById("listModalWindow"),"click","#startRecordingButton",(async()=>{t.target.disabled=!0;const n=o.stopRecording();let s=0;e.get("SendMoveFileFinished",(()=>{s++,n===s&&this.getRecordingFinished(e)}))}),!0)},this.getRecordingFinished=e=>{const t=document.getElementById("startRecordingButton");e.get("SendRecordingFinished",(()=>{t.textContent="記録開始",t.disabled=!1,ie.setEvent(document.getElementById("listModalWindow"),"click","#startRecordingButton",(async t=>this.activateVideo(e,t)),!0)})),e.send("FinishRecording",document.getElementById("eventNumber").value,document.getElementById("gameNumber").value,"management/")}}}class ue{constructor(){this.endHandProperty={EventNumber:null,HoraKind:null,Parent:null,RonPointDicList:null,PickPointDic:null,PaoPointDicList:null,TenpaiUsersList:null,LeachUsersList:null,MyaoUsersList:null,VideoIdDic:null,VideoNameDic:null,ValidVideoDic:null},this.register=async()=>{const e=document.getElementById("horaKind").value;this.endHandProperty.HoraKind=e,this.endHandProperty.Parent=document.getElementById("parent").value;const t=document.getElementsByClassName("toUser");if("1"==e){const e=document.getElementsByClassName("pickPoint");if(e.length){let n={UserCd:t[0].value},o=[];Array.from(e).forEach(((e,t)=>{o.push(e.value)})),o.length>1?parseInt(o[0])>parseInt(o[1])?(n.TumoPoint=o[1],n.ParentTumoPoint=o[0]):(n.TumoPoint=o[0],n.ParentTumoPoint=o[1]):n.TumoPoint=o[0],this.endHandProperty.PickPointDic=n}}if("2"==e){const e=document.getElementById("fromUser")?.value??null;if(t.length){let n=[];Array.from(t).forEach((t=>{const o=t.nextElementSibling;n.push({UserCd:t.value,Point:o.value,DealInUserCd:e})})),this.endHandProperty.RonPointDicList=n}}if(document.getElementById("pao").checked){const t=document.getElementsByClassName("paoUser");if(t.length){let n=[];if(parseInt(e)<20){const e=document.getElementsByClassName("toUser")[0].value,o=t[0].value,s=document.getElementsByClassName("paoPoint")[0].value;n=[{UserCd:e,PaoUserCd:o,PaoPoint:s}]}else Array.from(t).forEach(((e,t)=>{if(t>0&&e.previousElementSibling.checked)return;const o=e.nextElementSibling.nextElementSibling,s=o.nextElementSibling;n[t]={UserCd:o.value,PaoUserCd:e.value,PaoPoint:s.value}}));this.endHandProperty.PaoPointDicList=n}}const n=document.getElementsByClassName("leach");if(n.length){let e=[];Array.from(n).forEach((t=>{if(t.checked){const n=t.value,o=document.getElementById("userCd"+n);e.push(o.value)}})),e.length>0&&(this.endHandProperty.LeachUsersList=e)}const o=document.getElementsByClassName("myao");if(o.length){let e=[];Array.from(o).forEach((t=>{if(t.checked){const n=t.value,o=document.getElementById("userCd"+n);e.push(o.value)}})),e.length>0&&(this.endHandProperty.MyaoUsersList=e)}const s=document.getElementsByClassName("cameraSelector");if(s.length){let e={},t={},n={};Array.from(s).forEach(((o,s)=>{if(s>=4)return;const i=o.closest(".videoController").querySelector(".userList"),r=o.selectedIndex,a=o.closest(".videoController").querySelector(".videoChecker");e[i.value]=o.value,t[i.value]=o.options[r].text,n[i.value]=a.checked})),this.endHandProperty.VideoIdDic=e,this.endHandProperty.VideoNameDic=t,this.endHandProperty.ValidVideoDic=n}if("30"==e){const e=document.getElementsByClassName("tenpai");let t=[];Array.from(e).forEach((e=>{e.checked&&t.push(e.value)})),this.endHandProperty.TenpaiUsersList=t}console.log(this.endHandProperty);const i=new ne;return await i.send(this.url,this.method,this.headers,this.endHandProperty,this.responseKind,!1).catch((e=>{throw e}))},this.url="/GameData/EndHandRegister",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json",this.endHandProperty.EventNumber=document.getElementById("eventNumber").value}}class ge{constructor(){this.setEndHandRegisterEvent=e=>{ie.setEvent(document.getElementById("endHandModalWindow"),"click","#correctModal",(()=>{(new ue).register()})),e.get("SendEndHandJson",(e=>{document.getElementById("resultModalWindow").innerHTML=e.result,document.getElementById("resultModalWrapper")?.classList.remove("hidden"),document.getElementById("nextHand")?.addEventListener("click",(()=>{document.getElementById("nowHand")?.classList.remove("hidden"),document.getElementById("nextResult")?.classList.remove("hidden"),document.getElementById("nowResult")?.classList.add("hidden")})),document.getElementById("nowHand")?.addEventListener("click",(()=>{document.getElementById("nowHand")?.classList.add("hidden"),document.getElementById("nextResult")?.classList.add("hidden"),document.getElementById("nowResult")?.classList.remove("hidden")})),document.getElementById("resultConfirm")?.addEventListener("click",(()=>{null!=document.getElementById("mainContents")&&(document.getElementById("mainContents").innerHTML=e.gameData),document.getElementById("resultModalWrapper")?.classList.add("hidden"),document.getElementById("endHandModalWrapper")?.classList.add("hidden"),null!=document.getElementById("listStartGameButton")&&document.getElementById("listStartGameButton").click()}))}))}}}class me{}me.Get=(e,t,n)=>{let o={};switch(n){case"VGA":o={characterFrame:{x:0,y:400,w:800,h:210},leftUp:{x:0,y:0,w:0,h:0},field:{x:0,y:0,font:0},leachImage:{x:0,y:0,w:0,h:0},leach:{x:0,y:0,font:0},honbaImage:{x:0,y:0,w:0,h:0},honba:{x:0,y:0,font:0},face:{x:80,y:420,w:150,h:170},point:{x:780,y:575,font:75},title:{x:780,y:445,font:30},name:{x:780,y:505,font:60},yaku:{x:0,y:0,font:0},kind:{x:750,y:385,font:60},movingPoint:{x:780,y:465,font:30},allow:{x:700,y:505,font:45}};break;case"HDTV":o={characterFrame:{x:0,y:620,w:1280,h:300},leftUp:{x:0,y:0,w:0,h:0},field:{x:0,y:0,font:0},leachImage:{x:0,y:0,w:0,h:0},leach:{x:0,y:0,font:0},honbaImage:{x:0,y:0,w:0,h:0},honba:{x:0,y:0,font:0},face:{x:660,y:650,w:160,h:180},point:{x:1245,y:825,font:75},name:{x:1245,y:755,font:60},title:{x:1245,y:695,font:30},allow:{x:1255,y:755,font:45},movingPoint:{x:1245,y:520,font:30},yaku:{x:0,y:0,font:0},kind:{x:1230,y:755,font:60}}}let s=e.clientWidth/t.w,i=e.clientHeight/t.h;const r=s<i?e.clientWidth:e.clientHeight/t.h*t.w,a=i<s?e.clientHeight:e.clientWidth/t.w*t.h;let c=s<i?s:i;const l=Math.floor((r-t.w*s)/2),h=Math.floor((a-t.h*i)/2);return Object.keys(o).forEach((e=>{o[e].x=Math.floor(o[e].x*s)+l,o[e].y=Math.floor(o[e].y*i)+h,"w"in o[e]?(o[e].w=Math.floor(o[e].w*s),o[e].h=Math.floor(o[e].h*i)):o[e].font=Math.floor(o[e].font*c)})),o.canvas={w:r,h:a},o.video={x:l,y:h,w:Math.floor(t.w*s),h:Math.floor(t.h*i)},o};class pe{constructor(){this.setVideo=async(e,t,n,o)=>{const s=document.getElementById(t);return await navigator.mediaDevices.getUserMedia({audio:!1,video:{width:{ideal:n},height:{ideal:o},deviceId:e}}).then((async e=>{if(null===s)throw new Error("video_"+s+"is not exist");return s.srcObject=e,s.play(),s}))}}}class _e{constructor(e,t,n,o=25e3){this.point=25e3,this.myMovingPoint=0,this.targetPoint=0,this.calcPoint=0,this.leftCalcPoint=0,this.isCaliculate=!1,this.resultCd="0",this.canvasResolutions={},this.canvas=null,this.ctx=null,this.videoElement=null,this.isPointView=!1,this.resultDic={0:"　",1:"ツモ",2:"ロン",3:"放銃",30:"流局",31:"聴牌",32:"ノーテン",33:"四風連打",34:"九種九牌",35:"四家立直",36:"四開槓",21:"ダブロン",22:"トリロン"},this.activateCanvas=async()=>{const e=document.getElementById("cameraSelector"+this.videoNumber),t=new pe;return this.videoElement=await t.setVideo(e.value,"video_"+this.videoNumber,this.resolution.w,this.resolution.h),await this.makeCanvasVideo()},this.makeCanvasVideo=async()=>(this.canvas=document.getElementById("canvasVideo_"+this.videoNumber),this.canvas.width=this.canvasResolutions.canvas.w,this.canvas.height=this.canvasResolutions.canvas.h,this.ctx=this.canvas.getContext("2d"),await this.loadImage(),this.image.src="/image/pict1.png",this.isPointView=!1,this.drawCanvas()),this.drawCanvas=()=>{if(this.canvas&&this.ctx){if(null===this.videoElement)throw new Error("video_"+this.videoNumber+"is not exist");this.ctx.globalAlpha=1,this.ctx.fillStyle="black",this.ctx.fillRect(0,0,this.canvasResolutions.canvas.w,this.canvasResolutions.canvas.h),this.ctx.drawImage(this.videoElement,this.canvasResolutions.video.x,this.canvasResolutions.video.y,this.canvasResolutions.video.w,this.canvasResolutions.video.h),this.isCaliculate&&this.pointMovingProcess(),this.ctx.globalAlpha=.5,this.ctx.fillRect(this.canvasResolutions.characterFrame.x,this.canvasResolutions.characterFrame.y,this.canvasResolutions.characterFrame.w,this.canvasResolutions.characterFrame.h),this.ctx.globalAlpha=1,this.ctx.drawImage(this.image,this.canvasResolutions.face.x,this.canvasResolutions.face.y,this.canvasResolutions.face.w,this.canvasResolutions.face.h),this.ctx.textAlign="end",this.ctx.fillStyle="white",this.isPointView?(this.ctx.font=this.canvasResolutions.kind.font.toString(),this.ctx.fillText(this.resultDic[this.resultCd],this.canvasResolutions.kind.x,this.canvasResolutions.kind.y),this.ctx.fillText(this.myMovingPoint.toString(),this.canvasResolutions.movingPoint.x,this.canvasResolutions.movingPoint.y),this.ctx.font=this.canvasResolutions.allow.font.toString()+"px monospace",this.ctx.fillText("↓",this.canvasResolutions.allow.x,this.canvasResolutions.allow.y),this.ctx.textAlign="end"):(this.ctx.font=this.canvasResolutions.title.font.toString()+"px monospace",this.ctx.fillText(this.title,this.canvasResolutions.title.x,this.canvasResolutions.title.y),this.ctx.font=this.canvasResolutions.name.font.toString()+"px monospace",this.ctx.fillText(this.name,this.canvasResolutions.name.x,this.canvasResolutions.name.y)),this.ctx.font=this.canvasResolutions.point.font.toString()+"px monospace",this.ctx.fillText(this.point.toLocaleString(),this.canvasResolutions.point.x,this.canvasResolutions.point.y)}},this.loadImage=async()=>this.image.addEventListener("load",(()=>{})),this.pointMovingProcess=()=>{this.isPointView=!0,0!==this.calcPoint&&(this.leftCalcPoint-=this.calcPoint,this.point+=this.calcPoint),this.myMovingPoint<0?this.isCaliculate=this.point>this.targetPoint:this.isCaliculate=this.point<this.targetPoint,this.isCaliculate||(this.leftCalcPoint=0,this.calcPoint=0,this.point=this.targetPoint,this.targetPoint=0,window.setTimeout((()=>{this.myMovingPoint=0,this.isPointView=!1}),2e3))},this.resolution={w:800,h:600};const s=document.getElementById("canvas"+n+"Wrapper");this.canvasResolutions=me.Get(s,this.resolution,"VGA"),this.image=new Image,this.title=e,this.name=t,this.videoNumber=n,this.point=o}}class ve{constructor(){this.cameraContainer=[],this.fps=60,this.intervalId=0,this.controlVideoEvent=async e=>{await this.setDevices();const t=document.getElementsByClassName("cameraSelector");if(Array.from(t).forEach((e=>{this.createCameraSelectorObject(e)})),document.getElementById("mainContents").classList.remove("hidden"),null===document.getElementById("gameNumber")||""===document.getElementById("gameNumber").value)return;const n=document.getElementById("eventNumber").value,o=document.getElementById("gameNumber").value,s=new ne,i=await s.send(this.url,this.method,this.headers,{EventNumber:n,GameNumber:o},this.responseKind).then((async e=>e)).catch((e=>{throw e}));let r=[];for(let e=0;e<5;e++)r.push(null),ie.setEvent(document.getElementById("listModalWindow"),"change","#video"+e+"Checker",(async t=>{this.setVideoInstance(t.target,r,i[e].userTitle,i[e].userName,e,i[e].point)}));e.get("SendEndHandResultEntityList",(e=>{console.log(e),e.filter((e=>null!=e.videoNumber&&null!=r[e.videoNumber])).forEach(((e,t)=>{this.setUserData(r[e.videoNumber],e)}))})),document.getElementById("video0Button").addEventListener("click",(()=>{null!=r[0]&&(r[0].myMovingPoint=-48e3,r[0].isCaliculate=!0,r[0].targetPoint=r[0].point+r[0].myMovingPoint,r[0].calcPoint=Math.floor(r[0].myMovingPoint/(3*this.fps)),r[0].leftCalcPoint=r[0].myMovingPoint)})),ie.setEvent(document.getElementById("listModalWindow"),"change","#videoSize",(async e=>{this.changeVideoSize();for(let e=0;e<5;e++)r.push(null),this.setVideoInstance(document.getElementById("video"+e+"Checker"),r,i[e].title,i[e].name,e,i[e].point)}))},this.setVideoInstance=async(e,t,n,o,s,i)=>{if(e.checked){const e=new _e(n,o,s,i);t[s]=e,this.intervalId&&clearInterval(this.intervalId),e.activateCanvas(),await this.setDrawCanvas(t).then((e=>{this.intervalId=e})),document.getElementById("canvasVideo_"+s).dataset.cvenable="1"}else t[s]=null,document.getElementById("canvasVideo_"+s).dataset.cvenable="0"},this.setDevices=async()=>{(await navigator.mediaDevices.enumerateDevices()).forEach((e=>{"videoinput"===e.kind&&this.cameraContainer.push({deviceId:e.deviceId,label:e.label})}))},this.createCameraSelectorObject=e=>{this.cameraContainer.forEach((t=>{const n=document.createElement("option");n.value=t.deviceId,n.text=t.label,e.appendChild(n)}))},this.changeVideoSize=()=>{const e=document.getElementById("videoSize").value,t=document.getElementsByClassName("videoWrapper");Array.from(t).forEach(((t,n)=>{switch(t.classList.remove(...t.classList),t.classList.add("videoWrapper"),e){case"small":t.classList.add("small");break;case"filmtsrip":t.classList.add("filmtsrip");break;case"middle":if(t.classList.add("middle"),n<4)return;document.getElementById("video"+n+"Checker").checked=!1,t.classList.add("nodisplay");break;case"large":if(t.classList.add("large"),n<1)return;document.getElementById("video"+n+"Checker").checked=!1,t.classList.add("nodisplay")}}))},this.setDrawCanvas=async e=>await window.setInterval((()=>{e.forEach((e=>{null!==e&&e.drawCanvas()}))}),1e3/this.fps),this.setUserData=(e,t)=>{setTimeout((()=>{e.myMovingPoint=t.movingPoint,e.targetPoint=t.point,e.isCaliculate=!0,e.calcPoint=Math.floor(e.myMovingPoint/60*5),e.leftCalcPoint=e.myMovingPoint,e.resultCd=t.resultCd}),3e3)},this.url="/Event/GetVideoUsers",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json"}}class fe{constructor(){this.startGameProperty={EventNumber:null,HandNumber:null,HandSubNumber:null,UsersList:null,DirectionDictionary:null,VideoDictionary:null,VideoNumberDictionary:null},this.setStartEvent=()=>{ie.setEvent(document.getElementById("listModalWindow"),"click","#listStartGameButton",(()=>{this.start().then((e=>{this.setGameData(e)}))}))},this.setGameData=e=>{console.log(e);const t=e.gameData,n=e.videoController,o=document.getElementById("mainContents"),s=document.getElementById("listModalWindow");o.innerHTML=t,s.innerHTML=n},this.start=async()=>{let e=[],t={},n={},o={};const s=document.getElementsByClassName("userList");if(s.length&&(Array.from(s).forEach(((s,i)=>{const r=s.value,a=s.closest(".videoController").querySelector(".directionList"),c=s.closest(".videoController").querySelector(".cameraSelector");"99"!=r&&(e.length>=4||(e.push(r),t[r]=a.value,n[r]=c.value,o[r]=i.toString()))})),Array.from(new Set(e)).length<4))throw alert("ユーザーが重複しています"),new Error("user Duplicated");this.startGameProperty.UsersList=e,this.startGameProperty.DirectionDictionary=t,this.startGameProperty.VideoDictionary=n,this.startGameProperty.VideoNumberDictionary=o,this.startGameProperty.HandNumber=document.getElementById("handNumber").value,this.startGameProperty.HandSubNumber=document.getElementById("handSubNumber").value,new ye(parseInt(document.getElementById("eventNumber").value),e,t);const i=new ne;return await i.send(this.url,this.method,this.headers,this.startGameProperty,this.responseKind).then((async e=>e)).catch((e=>{throw e}))},this.url="/Event/StartGame",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json",this.startGameProperty.EventNumber=document.getElementById("eventNumber").value}}class ye{constructor(e,t,n){this.EventNumber=e,this.UsersList=t,this.DirectionDictionary=n}}class we{constructor(e,t=""){this.setControl=()=>{Array.from(document.getElementsByClassName("modalWindow")).forEach((e=>{const t=e;ie.setEvent(t,"click",".closeModal",(()=>{this.hidden()})),ie.setEvent(t,"click","#"+this.modalKind+"ModalWrapper",(e=>{e.target.closest("#"+this.modalKind+"ModalWindow")??this.hidden()})),ie.setEvent(t,"click",this.openModalElementSelector,(e=>{this.show()}))}))},this.show=()=>{document.getElementById(this.modalKind+"ModalWrapper").classList.remove("hidden")},this.hidden=()=>{console.log(this.modalKind),console.log(document.getElementById(this.modalKind+"ModalWrapper")),document.getElementById(this.modalKind+"ModalWrapper").classList.add("hidden")},this.modalKind=t,this.openModalElementSelector=e}}class be{}var Ee;be.setModal=()=>{document.getElementById("painList")?.classList.remove("nodisplay"),document.getElementById("painButton")?.addEventListener("click",(()=>{document.getElementById("listModalWrapper").classList.remove("hidden")}));const e=new we("#painButton","list"),t=new we("#listEndHandButton","endHand"),n=new we("#showVideoTestButton","videoTest"),o=new we("#showPointButton","showPoint"),s=new we("#videoRegisterButton","videoRegister");e.setControl(),t.setControl(),n.setControl(),o.setControl(),s.setControl()};class Ce{}Ee=Ce,Ce.cameraContainer=[],Ce.setDevices=async()=>{const e=await navigator.mediaDevices.enumerateDevices();return Ee.cameraContainer=[],e.forEach((e=>{"videoinput"===e.kind&&Ee.cameraContainer.push({deviceId:e.deviceId,label:e.label})})),Ee.cameraContainer},Ce.createCameraSelectorObject=e=>{e.childElementCount>0&&Array.from(e.children).forEach((e=>{e.remove()})),Ee.cameraContainer.forEach((t=>{const n=document.createElement("option");n.value=t.deviceId,n.text=t.label,e.appendChild(n)}))};class Se{constructor(){this.cameraContainer=[],this.registerVideoProperty={DeviceId:null,Label:null,CameraName:null},this.setRegisterVideoEvent=async()=>{let e;document.getElementById("getRegisterVideoSelectorButton")?.addEventListener("click",(async()=>{this.cameraContainer=await Ce.setDevices();let e=document.getElementById("registerVideoList");Ce.createCameraSelectorObject(e),document.getElementById("startRegisterVideoButton").classList.remove("hidden")})),document.getElementById("startRegisterVideoButton")?.addEventListener("click",(async()=>{const t=document.getElementById("registerVideoList"),n=new pe;e=await n.setVideo(t.value,"registerVideo",320,240)})),document.getElementById("stopRegiterVideoButton")?.addEventListener("click",(async()=>{e.pause(),e.load();const t=e.querySelector("source");null!=t&&(t.src="",e.load())})),document.getElementById("registerVideoInformationButton")?.addEventListener("click",(async()=>{const e=document.getElementById("registerVideoList"),t=e.selectedIndex,n=document.getElementById("registerCameraName");this.registerVideoProperty.CameraName=n.value,this.registerVideoProperty.DeviceId=e.value,this.registerVideoProperty.Label=e.options[t].text,this.setRegisterVideo()}))},this.setRegisterVideo=async()=>{const e=new ne;return await e.send(this.url,this.method,this.headers,this.registerVideoProperty,this.responseKind).then((async e=>{e&&alert("register complete")})).catch((e=>{throw e}))},this.url="/Event/RegisterVideo",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="json"}}class Ie{constructor(){this.cameraContainer=[],this.fps=60,this.intervalId=0,this.setTestVideoEvent=async()=>{let e;document.getElementById("getTestVideoSelector")?.addEventListener("click",(async()=>{await this.setDevices();let e=document.getElementById("testVideoList");this.createCameraSelectorObject(e),document.getElementById("startTestVideo").classList.remove("hidden")})),document.getElementById("startTestVideo")?.addEventListener("click",(async()=>{const t=document.getElementById("testVideoList"),n=new pe;e=await n.setVideo(t.value,"testVideo",200,150)})),document.getElementById("endVideoTest")?.addEventListener("click",(async()=>{e.pause(),e.load();const t=e.querySelector("source");null!=t&&(t.src="",e.load())}))},this.setDevices=async()=>{const e=await navigator.mediaDevices.enumerateDevices();this.cameraContainer=[],e.forEach((e=>{"videoinput"===e.kind&&this.cameraContainer.push({deviceId:e.deviceId,label:e.label})}))},this.createCameraSelectorObject=e=>{e.childElementCount>0&&Array.from(e.children).forEach((e=>{e.remove()})),this.cameraContainer.forEach((t=>{const n=document.createElement("option");n.value=t.deviceId,n.text=t.label,e.appendChild(n)}))}}}class Pe{constructor(){this.getCameraProperty={EventNumber:null,GameNumber:null,CameraContainer:null},this.cameraContainer=[],this.setGetCamerEvent=()=>{ie.setEvent(document.getElementById("listModalWindow"),"click","#getCameraButton",(async()=>{this.getCameraProperty.CameraContainer=await Ce.setDevices();const e=await this.get();document.getElementById("listModalWindow").innerHTML=e}))},this.get=async()=>{const e=new ne;return await e.send(this.url,this.method,this.headers,this.getCameraProperty,this.responseKind).then((async e=>e)).catch((e=>{throw e}))},this.url="/Event/GetCamera",this.method="POST",this.headers={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},this.responseKind="text",this.getCameraProperty.EventNumber=document.getElementById("eventNumber").value,this.getCameraProperty.GameNumber=document.getElementById("gameNumber").value}}Pe.cameraContainer=[],(async()=>{const e=new te,t=new oe,n=new ve,o=new Ie,s=new Se,i=new fe,r=new ge,a=new ae,c=new ce,l=new Pe,h=new de;await e.activate(),n.controlVideoEvent(e),t.setHoraKindEvent(),i.setStartEvent(),r.setEndHandRegisterEvent(e),o.setTestVideoEvent(),s.setRegisterVideoEvent(),a.setGameEndEvent(),c.setStartEvent(),l.setGetCamerEvent(),h.setRecordEvent(e),be.setModal(),re.setAvoidDuplication(),re.hangingVideoSetter("#listModalWindow")})()})()})();